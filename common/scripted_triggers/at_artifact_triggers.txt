at_can_interact_with_trigger = {
	NOT = { this = $PARTY$ }
	is_busy_in_events_localised = yes
	in_diplomatic_range = $PARTY$
	NOT = { is_at_war_with = $PARTY$ }
	is_imprisoned = no
}

at_can_sell_artifact_to_trigger = {
	at_can_interact_with_trigger = { PARTY = $PARTY$ }
	is_ai = yes
	custom_description = {
		text = "at_aniconists_wont_trade_artifacts"
		at_has_aniconist_faith_trigger = no
	}
	short_term_gold > 1
}

at_can_buy_artifact_from_trigger = {
	at_can_interact_with_trigger = { PARTY = $PARTY$ }
	is_ai = yes
	custom_description = {
		text = "at_aniconists_wont_trade_artifacts"
		at_has_aniconist_faith_trigger = no
	}
}

at_can_start_interaction_trigger = {
	is_busy_in_events_localised = yes
	is_imprisoned = no
	custom_description = {
		text = "at_aniconists_wont_trade_artifacts"
		at_has_aniconist_faith_trigger = no
	}
}

at_has_aniconist_faith_trigger = {
	faith = {
		has_doctrine_parameter = destroying_artifacts_is_pious
	}
}

at_valid_buyer_or_seller_trigger = {
	NOT = { this = $PARTY$ }
	in_diplomatic_range = $PARTY$
	trigger_if = {
		limit = {
			has_game_rule = at_valid_trading_partners_same_and_neighboring_realms
		}
		OR = {
			at_is_same_realm_character_trigger = { PARTY = $PARTY$ }
			at_is_neighboring_realm_character_trigger = { PARTY = $PARTY$ }
		}
	}
	trigger_else_if = {
		limit = {
			has_game_rule = at_valid_trading_partners_within_trading_range
		}
		OR = {
			at_is_same_realm_character_trigger = { PARTY = $PARTY$ }
			at_is_neighboring_realm_character_trigger = { PARTY = $PARTY$ }
			at_is_landed_ruler_within_trading_range_trigger = { PARTY = $PARTY$ }
		}
	}
	trigger_else = {
		always = yes
	}
}

at_is_same_realm_character_trigger = {
	trigger_if = {
		limit = { exists = top_liege }
		trigger_if = {
			limit = { $PARTY$ = { exists = top_liege } }
			$PARTY$.top_liege = top_liege
		}
		trigger_else = {
			top_liege = $PARTY$
		}
	}
	trigger_else = {
		$PARTY$ = { exists = top_liege }
		$PARTY$.top_liege = this
	}
}

at_is_neighboring_realm_character_trigger = {
	any_neighboring_and_across_water_top_liege_realm_owner = {
		trigger_if = {
			limit = { $PARTY$ = { exists = top_liege } }
			$PARTY$.top_liege = this
		}
		trigger_else = {
			this = $PARTY$
		}
	}
}

at_is_landed_ruler_within_trading_range_trigger = {
	is_landed = yes
	$PARTY$ = { is_landed = yes }
	capital_province = {
		squared_distance = {
			target = $PARTY$.capital_province
			value <= $PARTY$.at_artifact_trading_range_value
		}
	}
}

at_is_character_poor_trigger = {
	is_ruler = yes
	trigger_if = {
		limit = { ai_has_economical_boom_personality = yes }
		gold <= medium_gold_value
	}
	trigger_else = {
		gold <= minor_gold_value
	}
}

at_is_character_rich_trigger = {
	is_ruler = yes
	trigger_if = {
		limit = { ai_has_economical_boom_personality = yes }
		short_term_gold >= massive_gold_value
	}
	trigger_else = {
		short_term_gold >= major_gold_value
	}
}

at_is_worthless_artifact_trigger = {
	OR = {
		has_variable = ai_to_ai_destroy_in_sieges
		AND = {
			rarity = common
			artifact_slot_type = miscellaneous
			artifact_durability <= define:NInventory|ARTIFACT_LOW_DURABILITY
		}
	}
}

at_is_unique_artifact_trigger = {
	OR = {
		is_unique = yes
		has_variable = historical_unique_artifact
	}
}

# TODO Built-in trigger can_equip_artifact is buggy in 1.9.0.3
# replace the body with can_equip_artifact = $ARTIFACT$ when fixed
at_can_equip_artifact_trigger = {
	trigger_if = {
		limit = {
			$ARTIFACT$ = {
				OR = {
					# child_toy_template
					has_variable = playdate_trinket
					has_variable = miniature_collection_tiny_chest
					has_variable = miniature_collection_tiny_sculpture
					has_variable = miniature_collection_tiny_cabinet
					has_variable = miniature_collection_tiny_throne
					has_variable = miniature_collection_tiny_box
				}
			}
		}
		age < 16
	}
	trigger_else_if = {
		limit = {
			$ARTIFACT$ = {
				OR = {
					# adults_only_template: cuckoldry_psalter
					AND = {
						has_variable = cursed_artifact
						has_variable = ai_to_ai_destroy_in_sieges
						has_artifact_modifier = artifact_monthly_prestige_penalty_modifier
						has_artifact_modifier = artifact_attraction_opinion_negative_1_modifier
					}
					# adults_only_template: chastity_belt
					AND = {
						has_variable = cursed_artifact
						has_variable = ai_to_ai_destroy_in_sieges
						has_artifact_modifier = artifact_fertility_negative_modifier
					}
					# adults_only_template: worm_on_a_string
					AND = {
						has_variable = cursed_artifact
						has_variable = ai_to_ai_destroy_in_sieges
						has_artifact_modifier = artifact_attraction_opinion_negative_2_modifier
						has_artifact_modifier = artifact_child_opinion_1_modifier
					}
				}
			}
		}
		age > 18
	}
	trigger_else_if = {
		limit = {
			$ARTIFACT$ = {
				category = court
			}
		}
		has_royal_court = yes
	}
	trigger_else = {
		# For other artifact templates it's currently either always equippable
		# or can_equip is the same as can_benefit
		always = yes
	}
}

at_has_artifact_succession_title_trigger = {
	exists = $ARTIFACT$.var:artifact_succession_title
	has_title = $ARTIFACT$.var:artifact_succession_title
}

at_is_artifact_relic_religion_special_character_trigger = {
	OR = {
		AND = {
			exists = $ARTIFACT$.var:relic_religion
			has_religion = $ARTIFACT$.var:relic_religion
		}
		AND = {
			exists = $ARTIFACT$.var:relic
			at_has_artifact_relic_flag_religion_trigger = { ARTIFACT = $ARTIFACT$ }
		}
	}
	any_held_title = { is_head_of_faith = yes }
}

at_has_artifact_relic_flag_religion_trigger = {
	trigger_if = {
		limit = { $ARTIFACT$.var:relic = flag:christian }
		has_religion = religion:christianity_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:islamic }
		has_religion = religion:islam_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:buddhism }
		has_religion = religion:buddhism_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:zoroastr }
		has_religion = religion:zoroastrianism_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:jainism }
		has_religion = religion:jainism_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:judaism }
		has_religion = religion:judaism_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:germanic }
		has_religion = religion:germanic_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:slavic }
		has_religion = religion:slavic_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:boog }
		has_religion = religion:west_african_roog_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:hinduism }
		has_religion = religion:hinduism_religion
	}
	trigger_else_if = {
		limit = { $ARTIFACT$.var:relic = flag:finno_ugric_religion }
		has_religion = religion:finno_ugric_religion
	}
	trigger_else = {
		always = no
	}
}

at_can_equip_and_benefit_from_artifact_trigger = {
	at_can_equip_artifact_trigger = { ARTIFACT = $ARTIFACT$ }
	can_benefit_from_artifact = $ARTIFACT$
}

at_is_artifact_equppable_and_beneficial_trigger = {
	$CHARACTER$ = {
		at_can_equip_and_benefit_from_artifact_trigger = { ARTIFACT = prev }
	}
}

at_is_dynasty_banner_trigger = {
	exists = $ARTIFACT$.var:banner_dynasty
	exists = dynasty
	this = $ARTIFACT$.var:banner_dynasty.dynast
}

at_is_house_banner_trigger = {
	exists = $ARTIFACT$.var:banner_house
	exists = house
	this = $ARTIFACT$.var:banner_house.house_head
}

at_is_useless_banner_trigger = {
	OR = {
		exists = $ARTIFACT$.var:banner_dynasty
		exists = $ARTIFACT$.var:banner_house
	}
	trigger_if = {
		limit = { exists = $ARTIFACT$.var:banner_dynasty }
		NAND = {
			exists = dynasty
			$ARTIFACT$.var:banner_dynasty = dynasty
		}
	}
	trigger_else = {
		NAND = {
			exists = house
			$ARTIFACT$.var:banner_house = house
		}
	}
}

at_is_artifact_likely_to_be_traded_trigger = {
	NOR = {
		has_variable = unwanted_artifact
		has_variable = cursed_artifact
		has_variable = at_artifact_recently_bought
	}
}

at_is_likely_to_buy_artifact_trigger = {
	save_temporary_scope_as = character
	is_at_war = no
	at_can_equip_and_benefit_from_artifact_trigger = { ARTIFACT = scope:artifact }
	OR = {
		scope:artifact = { can_be_claimed_by = scope:character }
		at_is_dynasty_banner_trigger = { ARTIFACT = scope:artifact }
		at_is_house_banner_trigger = { ARTIFACT = scope:artifact }
		at_has_artifact_succession_title_trigger = { ARTIFACT = scope:artifact }
		at_nth_equippable_artifact_quality_wealth_average_value = 0
	}
}

at_is_likely_to_sell_artifact_trigger = {
	NOR = {
		at_is_dynasty_banner_trigger = { ARTIFACT = scope:artifact }
		at_is_house_banner_trigger = { ARTIFACT = scope:artifact }
		at_has_artifact_succession_title_trigger = { ARTIFACT = scope:artifact }
	}
	OR = {
		NOT = { at_can_equip_and_benefit_from_artifact_trigger = { ARTIFACT = scope:artifact } }
		scope:artifact = { is_equipped = no }
		at_np1th_equippable_artifact_quality_wealth_average_value >= scope:artifact.at_artifact_quality_wealth_average_value
	}
}

at_artifact_better_than_equipped_trigger = {
	trigger_if = {
		limit = {
			scope:artifact = { artifact_slot_type = primary_armament }
		}
		OR = {
			NOT = {
				any_equipped_character_artifact = {
					artifact_slot_type = primary_armament
				}
			}
			any_equipped_character_artifact = {
				artifact_slot_type = primary_armament
				at_artifact_quality_wealth_average_value < scope:artifact.at_artifact_quality_wealth_average_value
			}
		}
	}
	trigger_else_if = {
		limit = {
			scope:artifact = { artifact_slot_type = armor }
		}
		OR = {
			NOT = {
				any_equipped_character_artifact = {
					artifact_slot_type = armor
				}
			}
			any_equipped_character_artifact = {
				artifact_slot_type = armor
				at_artifact_quality_wealth_average_value < scope:artifact.at_artifact_quality_wealth_average_value
			}
		}
	}
	trigger_else_if = {
		limit = {
			scope:artifact = { artifact_slot_type = regalia }
		}
		OR = {
			NOT = {
				any_equipped_character_artifact = {
					artifact_slot_type = regalia
				}
			}
			any_equipped_character_artifact = {
				artifact_slot_type = regalia
				at_artifact_quality_wealth_average_value < scope:artifact.at_artifact_quality_wealth_average_value
			}
		}
	}
	trigger_else_if = {
		limit = {
			scope:artifact = { artifact_slot_type = helmet }
		}
		OR = {
			NOT = {
				any_equipped_character_artifact = {
					artifact_slot_type = helmet
				}
			}
			any_equipped_character_artifact = {
				artifact_slot_type = helmet
				at_artifact_quality_wealth_average_value < scope:artifact.at_artifact_quality_wealth_average_value
			}
		}
	}
	trigger_else_if = {
		limit = {
			scope:artifact = { artifact_slot_type = miscellaneous }
		}
		any_equipped_character_artifact = {
			artifact_slot_type = miscellaneous
			count <= 3
		}
	}
	trigger_else = {
		always = no
	}
}

at_aniconist_should_destroy_artifact_trigger = {
	faith = {
		has_doctrine_parameter = destroying_artifacts_is_pious
	}
	OR = {
		has_trait = zealous
		$ARTIFACT$ = { is_equipped = no }
		$ARTIFACT$ = { exists = var:relic }
	}
	NOR = {
		has_trait = cynical
		AND = {
			has_trait = greedy
			NOT = { has_trait = zealous }
		}
	}
}