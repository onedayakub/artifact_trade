at_artifacts_window_get_artifacts_effect = {
	if = {
		limit = { 
			NOT = { has_global_variable = at_artifacts_window_is_getting_artifacts }
		}
		set_global_variable = at_artifacts_window_is_getting_artifacts

		at_artifacts_window_get_all_artifacts_effect = yes
		at_artifacts_window_get_filtered_artifacts_effect = yes
		at_artifacts_window_get_sorted_artifacts_effect = yes

		remove_global_variable = at_artifacts_window_is_getting_artifacts
	}
}

at_artifacts_window_get_all_artifacts_effect = {
	clear_global_variable_list = at_artifacts_window_all_artifacts
	if = {
		limit = { scope:flavor = flag:sell }
		at_get_valid_buyers_or_sellers_effect = { LIST = valid_buyers }
		save_temporary_scope_as = actor
		every_character_artifact = {
			limit = {
				is_equipped = no
				save_temporary_scope_as = artifact
				any_in_list = {
					list = valid_buyers
					at_can_sell_artifact_to_trigger = { PARTY = ROOT }
					save_temporary_opinion_value_as = {
						name = opinion_of_actor
						target = ROOT
					}
					at_sell_artifact_ai_accept_value > 0
				}
			}
			add_to_global_variable_list = {
				name = at_artifacts_window_all_artifacts
				target = this
			}
		}
	}
	else_if = {
		limit = { scope:flavor = flag:buy }
		at_get_valid_buyers_or_sellers_effect = { LIST = valid_sellers }
		save_temporary_scope_as = actor
		every_in_list = {
			list = valid_sellers
			limit = {
				at_can_buy_artifact_from_trigger = { PARTY = ROOT }
			}
			save_temporary_scope_as = seller
			save_temporary_opinion_value_as = {
				name = opinion_of_actor
				target = ROOT
			}
			every_character_artifact = {
				limit = {
					at_buy_artifact_ai_accept_value > 0
				}
				add_to_global_variable_list = {
					name = at_artifacts_window_all_artifacts
					target = this
				}
			}
		}
	}
	else = {
		every_artifact = {
			add_to_global_variable_list = {
				name = at_artifacts_window_all_artifacts
				target = this
			}
		}
	}
}

at_artifacts_window_get_filtered_artifacts_effect = {
	clear_global_variable_list = at_artifacts_window_filtered_artifacts
	every_in_global_list = {
		variable = at_artifacts_window_all_artifacts
		limit = {
			# Filter by rarity
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_rarity_filter_option = flag:_common }
				rarity = common
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_rarity_filter_option = flag:_masterwork }
				rarity = masterwork
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_rarity_filter_option = flag:_famed }
				rarity = famed
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_rarity_filter_option = flag:_illustrious }
				rarity = illustrious
			}
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_rarity_filter_option = flag:_not_common }
				NOT = { rarity = common }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_rarity_filter_option = flag:_not_masterwork }
				NOT = { rarity = masterwork }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_rarity_filter_option = flag:_not_famed }
				NOT = { rarity = famed }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_rarity_filter_option = flag:_not_illustrious }
				NOT = { rarity = illustrious }
			}
			trigger_else = {
				always = yes
			}

			# Filter by slot type
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_inventory }
				category = inventory
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_court }
				category = court
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_helmet }
				artifact_slot_type = helmet
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_regalia }
				artifact_slot_type = regalia
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_armor }
				artifact_slot_type = armor
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_primary_armament }
				artifact_slot_type = primary_armament
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_miscellaneous }
				artifact_slot_type = miscellaneous
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_sculpture }
				artifact_slot_type = sculpture
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_pedestal }
				artifact_slot_type = pedestal
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_wall_big }
				artifact_slot_type = wall_big
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_wall_small }
				artifact_slot_type = wall_small
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_throne }
				artifact_slot_type = throne
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_book }
				artifact_slot_type = book
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_helmet }
				NOT = { artifact_slot_type = helmet }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_regalia }
				NOT = { artifact_slot_type = regalia }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_armor }
				NOT = { artifact_slot_type = armor }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_primary_armament }
				NOT = { artifact_slot_type = primary_armament }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_miscellaneous }
				NOT = { artifact_slot_type = miscellaneous }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_sculpture }
				NOT = { artifact_slot_type = sculpture }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_pedestal }
				NOT = { artifact_slot_type = pedestal }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_wall_big }
				NOT = { artifact_slot_type = wall_big }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_wall_small }
				NOT = { artifact_slot_type = wall_small }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_throne }
				NOT = { artifact_slot_type = throne }
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_slot_type_filter_option = flag:_not_book }
				NOT = { artifact_slot_type = book }
			}
			trigger_else = {
				always = yes
			}

			# Filter by unique
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_unique_filter_option = flag:_unique }
				at_is_unique_artifact_trigger = yes
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_unique_filter_option = flag:_not_unique }
				is_unique = no
			}
			trigger_else = {
				always = yes
			}

			# Filter by equipped
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_equipped_filter_option = flag:_equipped }
				is_equipped = yes
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_equipped_filter_option = flag:_not_equipped }
				is_equipped = no
			}
			trigger_else = {
				always = yes
			}

			# Filter by owned
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_owned_filter_option = flag:_owned_by_you }
				artifact_owner = ROOT
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_owned_filter_option = flag:_not_owned_by_you }
				NOT = { artifact_owner = ROOT }
			}
			trigger_else = {
				always = yes
			}

			# Filter by claimed
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_claimed_filter_option = flag:_claimed_by_you }
				can_be_claimed_by = ROOT
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_claimed_filter_option = flag:_claimed_by_others }
				any_artifact_claimant = {
					exists = this
					NOT = { this = ROOT }
				}
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_claimed_filter_option = flag:_not_claimed }
				NOT = {
					any_artifact_claimant = {
						exists = this
					}
				}
			}
			trigger_else = {
				always = yes
			}

			# Filter by equippable
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_equippable_filter_option = flag:_equippable_by_you }
				ROOT = {
					at_can_equip_and_benefit_from_artifact_trigger = { ARTIFACT = PREV }
				}
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_equippable_filter_option = flag:_not_equippable_by_you }
				ROOT = {
					NOT = { at_can_equip_and_benefit_from_artifact_trigger = { ARTIFACT = PREV } }
				}
			}
			trigger_else = {
				always = yes
			}

			# Filter by unwanted
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_unwanted_filter_option = flag:_unwanted }
				OR = {
					has_variable = unwanted_artifact
					has_variable = cursed_artifact
				}
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_unwanted_filter_option = flag:_not_unwanted }
				NOR = {
					has_variable = unwanted_artifact
					has_variable = cursed_artifact
				}
			}
			trigger_else = {
				always = yes
			}

			# Filter by owner
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_owner_filter_option = flag:_ruler_with_rc }
				artifact_owner = {
					is_ruler = yes
					has_royal_court = yes
				}
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_owner_filter_option = flag:_ruler_without_rc }
				artifact_owner = {
					is_ruler = yes
					has_royal_court = no
				}
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_owner_filter_option = flag:_not_ruler }
				artifact_owner = {
					is_ruler = no
				}
			}
			trigger_else = {
				always = yes
			}

			# Filter by owner valid buyer or seller
			trigger_if = {
				limit = { global_var:at_artifacts_window_selected_owner_valid_buyer_or_seller_filter_option = flag:_valid_buyer_or_seller }
				artifact_owner = {
					at_valid_buyer_or_seller_trigger = { PARTY = ROOT }
				}
			}
			trigger_else_if = {
				limit = { global_var:at_artifacts_window_selected_owner_valid_buyer_or_seller_filter_option = flag:_not_valid_buyer_or_seller }
				artifact_owner = {
					NOT = { at_valid_buyer_or_seller_trigger = { PARTY = ROOT } }
				}
			}
			trigger_else = {
				always = yes
			}
		}

		add_to_global_variable_list = {
			name = at_artifacts_window_filtered_artifacts
			target = this
		}
	}
}

at_artifacts_window_get_sorted_artifacts_effect = {
	clear_global_variable_list = at_artifacts_window_artifacts
	ordered_in_global_list = {
		variable = at_artifacts_window_filtered_artifacts
		order_by = {
			# Apply sort option
			if = {
				limit = { global_var:at_artifacts_window_selected_artifact_sort_option = flag:_rarity }
				value = artifact_rarity
			}
			else_if = {
				limit = { global_var:at_artifacts_window_selected_artifact_sort_option = flag:_durability }
				value = artifact_durability
			}
			else_if = {
				limit = { global_var:at_artifacts_window_selected_artifact_sort_option = flag:_type }
				value = at_artifact_type_value
			}
			else_if = {
				limit = { global_var:at_artifacts_window_selected_artifact_sort_option = flag:_price }
				value = at_artifact_base_price_value
			}

			# Apply sort order
			if = {
				limit = {
					has_global_variable = at_artifacts_window_is_artifact_sort_order_ascending
				}
				multiply = -1
			}
		}
		max = at_artifacts_window_max_count_value
		check_range_bounds = no

		add_to_global_variable_list = {
			name = at_artifacts_window_artifacts
			target = this
		}
	}
}

at_artifacts_window_clear_artifacts_effect = {
	clear_global_variable_list = at_artifacts_window_all_artifacts
	clear_global_variable_list = at_artifacts_window_filtered_artifacts
	clear_global_variable_list = at_artifacts_window_artifacts
}
