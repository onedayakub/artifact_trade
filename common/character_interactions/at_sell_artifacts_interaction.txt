# Sell a previously selected artifact to other rulers that are willing to buy it from you.
# The previously selected artifact is saved in the at_selected_artifact scope:actor variable.
# Scopes: actor / recipient is the artifact owner (seller), secondary_recipient is the buyer, target is the artifact.
# Human player only.
at_sell_artifacts_interaction = {
	category = interaction_category_diplomacy
	desc = at_sell_artifacts_interaction_desc
	interface_priority = 60
	common_interaction = yes
	needs_recipient_to_open = no
	icon = artisan_inspiration

	target_type = artifact
	target_filter = actor_artifacts

	greeting = positive
	send_name = at_sell_artifacts_interaction_send_name

	hidden = yes

	populate_recipient_list = {
		scope:actor = {
			at_get_valid_buyers_or_sellers_effect = { LIST = potential_buyers }
		}
		every_in_list = {
			list = potential_buyers
			limit = {
				at_candidate_to_sell_artifact_to_trigger = { PARTY = scope:actor }
				scope:actor = {
					exists = var:at_selected_artifact
					var:at_selected_artifact = {
						save_temporary_scope_as = artifact
					}
				}
				save_temporary_opinion_value_as = {
					name = opinion_of_actor
					target = scope:actor
				}
				at_sell_artifact_ai_accept_value > 0
			}
			add_to_list = characters
		}
	}

	is_shown = {
		always = yes
	}

	is_valid_showing_failures_only = {
		always = yes
	}

	can_be_picked_artifact = {
		scope:actor = {
			exists = var:at_selected_artifact
			trigger_if = {
				limit = {
					exists = scope:target
				}
				var:at_selected_artifact = scope:target
			}
		}
	}

	on_accept = {
		scope:actor = { save_scope_as = seller }
		scope:secondary_recipient = { save_scope_as = buyer }
		scope:secondary_recipient = { save_scope_as = recipient }
		scope:target = { save_scope_as = artifact }
		at_buy_artifact_interaction_effect = {
			ARTIFACT_PRICE = scope:artifact.at_artifact_bid_price_minus_repair_cost_value
		}
	}

	auto_accept = yes
}
